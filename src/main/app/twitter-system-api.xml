<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter" xmlns:context="http://www.springframework.org/schema/context" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/current/mule-twitter.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">

    <http:listener-config name="twitter-system-api-httpListenerConfig" host="${http.host}" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    
    <apikit:config name="twitter-system-api-config" raml="twitter-system-api.raml" consoleEnabled="false" doc:name="Router"/>
    
    <context:property-placeholder location="universal-properties.properties"/>
    
    <twitter:config name="Twitter__Configuration" accessKey="${twitter.access.key}" accessSecret="${twitter.access.secret}" consumerKey="${twitter.consumer.key}" consumerSecret="${twitter.consumer.secret}" doc:name="Twitter: Configuration"/>
    
    <flow name="twitter-system-api-main">
        <http:listener config-ref="twitter-system-api-httpListenerConfig" path="/twitter/*" doc:name="HTTP"/>
        <apikit:router config-ref="twitter-system-api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="twitter-system-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="twitter-system-api-console">
        <http:listener config-ref="twitter-system-api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="twitter-system-api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/tweets/{searchTerm}:twitter-system-api-config">
        <twitter:search config-ref="Twitter__Configuration" query="#[flowVars.searchTerm]" doc:name="Twitter"/>
        <json:object-to-json-transformer doc:name="Convert Tweet Data to JSON"/>
        <validation:is-not-empty message="No tweets returned" exceptionClass="org.mule.module.apikit.exception.NotFoundException" value="#[json:tweets]" doc:name="Validation"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="13461257-a0e7-4709-862f-2f94f3731b6a">
            <!-- dw:input-payload mimeType="application/json"/ -->
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	detailedResults: payload.tweets map ((tweet , indexOfTweet) -> {
		datePublished: tweet.createdAt as :datetime {unit: "milliseconds"} as :string,
		hashtags: tweet.hashtagEntities.text,
		id: tweet.id as :string,
		source: "twitter",
		text: tweet.text,
		url: "https://twitter.com/i/web/status/" ++ tweet.id as :string,
		user: tweet.user.screenName
	}),
	searchTerm: payload.query,
	simpleResults: payload.tweets map ((tweet, indexOfTweet) -> {
		categories: tweet.hashtagEntities.text,
		id: tweet.id as :string,
		source: "twitter",
		text: tweet.text
	})
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <apikit:mapping-exception-strategy name="twitter-system-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
